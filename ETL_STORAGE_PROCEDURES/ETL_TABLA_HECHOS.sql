-- CREATE A RECORD THAT SAVES THE VALUES RETURNED FROM THE OLTP TABLE BY A FUNCTION.
-- CREATE A FUNCION THAT GETS THE NECESARY ROWS FROM THE OLTP DB.
-- CREATE A PROCEDURE THAT INSERTS THE ROWS GETED FROM THE OLTP DB TO THE OLAP DB.

CREATE OR REPLACE PACKAGE PK_ETL_HECHOS
IS 
   FUNCTION FN_OBT_VALS_HECHOS RETURN SYS_REFCURSOR;
   PROCEDURE SP_INSTR_VALS_HECHOS(MSJ OUT VARCHAR2);
   
END;

CREATE OR REPLACE PACKAGE BODY PK_ETL_HECHOS
IS 
    FUNCTION FN_OBT_VALS_HECHOS RETURN SYS_REFCURSOR
    IS
        DATOS_HECHOS SYS_REFCURSOR;
    BEGIN
        OPEN DATOS_HECHOS FOR 
        SELECT
        CANCION_TBL.ID_USUARIO,
        DIM_USUARIO.ID_USUARIO
        FROM C##_OLTP_ADMIN_DBII_PROJECT.CANCIONES CANCION_TBL
        INNER JOIN DIM_CANCION ON DIM_CANCION.ID_CANCION = CANCION_TBL.ID_CANCION;
        
        DESC DIM_USUARIO;
        
        INNER JOIN DIM_ARTISTA ON DIM_ARTISTA.ID_ARTISTA = CANCION_TBL.ID_ARTISTA
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES ON C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_CANCION = CANCION_TBL.ID_CANCION
        INNER JOIN DIM_TIEMPO ON DIM_TIEMPO.ID_TIEMPO = C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_REPRODUCCION
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS ON C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_USUARIO
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.PAGOS ON C##_OLTP_ADMIN_DBII_PROJECT.PAGOS.ID_USUARIO = C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_USUARIO
        INNER JOIN DIM_USUARIO ON DIM_USUARIO.ID_USUARIO = C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_USUARIO
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.PLANES ON C##_OLTP_ADMIN_DBII_PROJECT.PLANES.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.PAGOS.ID_PLAN
        INNER JOIN DIM_PLAN ON DIM_PLAN.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.PLANES.ID_PLAN;

        SELECT
        DIM_USUARIO.ID_USUARIO,
        DIM_CANCION.ID_CANCION,
        DIM_ARTISTA.ID_ARTISTA,
        DIM_TIEMPO.ID_TIEMPO,
        DIM_PLAN.ID_PLAN,
        DIM_CANCION.DURACIÓN,
        CANCION_TBL.CANTIDAD_REPRODUCCIONES,
        C##_OLTP_ADMIN_DBII_PROJECT.PLANES.PRECIO
        FROM C##_OLTP_ADMIN_DBII_PROJECT.CANCIONES CANCION_TBL
        INNER JOIN DIM_CANCION ON DIM_CANCION.ID_CANCION = CANCION_TBL.ID_CANCION
        INNER JOIN DIM_ARTISTA ON DIM_ARTISTA.ID_ARTISTA = CANCION_TBL.ID_ARTISTA
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES ON C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_CANCION = CANCION_TBL.ID_CANCION
        INNER JOIN DIM_TIEMPO ON DIM_TIEMPO.ID_TIEMPO = C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_REPRODUCCION
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS ON C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.REPRODUCCIONES.ID_USUARIO
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.PAGOS ON C##_OLTP_ADMIN_DBII_PROJECT.PAGOS.ID_USUARIO = C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_USUARIO
        INNER JOIN DIM_USUARIO ON DIM_USUARIO.ID_USUARIO = C##_OLTP_ADMIN_DBII_PROJECT.USUARIOS.ID_USUARIO
        INNER JOIN C##_OLTP_ADMIN_DBII_PROJECT.PLANES ON C##_OLTP_ADMIN_DBII_PROJECT.PLANES.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.PAGOS.ID_PLAN
        INNER JOIN DIM_PLAN ON DIM_PLAN.ID_PLAN = C##_OLTP_ADMIN_DBII_PROJECT.PLANES.ID_PLAN;
     
        
        

        
        OTLP_CANCIONES.ID_CANCION, 
        NVL(UPPER(TRIM(TRAILING '.' FROM OTLP_CANCIONES.TITULO)), 'SIN DEFINIR'),
        NVL(UPPER(TRIM(TRAILING '.' FROM OTLP_CANCIONES.GENERO)), 'NO ENCONTRADO'),
        NVL(OTLP_CANCIONES.DURACION_SEGUNDOS, 0)
        FROM C##_OLTP_ADMIN_DBII_PROJECT.CANCIONES OTLP_CANCIONES
        WHERE NOT EXISTS
        (SELECT * FROM DIM_CANCION DC WHERE DC.ID_CANCION = OTLP_CANCIONES.ID_CANCION);
        
        RETURN DATOS_CANCIONES;        
    END;
    
    PROCEDURE SP_INSTR_VALS_HECHOS(MSJ OUT VARCHAR2)
    IS
        TYPE FILA IS RECORD(
            CANCION_ID DIM_CANCION.ID_CANCION%TYPE, -- NUMBER
            TITULO DIM_CANCION.TÍTULO%TYPE, -- VARCHAR2(100 BYTE)
            GENERO DIM_CANCION.GÉNERO%TYPE, -- VARCHAR2(50 BYTE)
            DURACION DIM_CANCION.DURACIÓN%TYPE -- NUMBER
        );
        FILA_CANCION FILA;
    
        DATOS_OBTENIDOS SYS_REFCURSOR;
    BEGIN
        DATOS_OBTENIDOS := FN_OBTENER_CANCIONES;
      
        LOOP
            FETCH DATOS_OBTENIDOS INTO FILA_CANCION;
            EXIT WHEN DATOS_OBTENIDOS%NOTFOUND;
            
        COUNT(HECHOS_REPRODUCCIONES.ID_REPRODUCCION),
            
            INSERT INTO DIM_CANCION VALUES 
            (FILA_CANCION.CANCION_ID, 
            NVL(UPPER(TRIM(TRAILING '.' FROM FILA_CANCION.TITULO)), 'SIN DEFINIR'), 
            NVL(UPPER(TRIM(TRAILING '.' FROM FILA_CANCION.GENERO)), 'NO ENCONTRADO'),
            NVL(FILA_CANCION.DURACION, 0));
            
            /*
            DBMS_OUTPUT.PUT_LINE('ID DE LA CANCION: '|| FILA_CANCION.CANCION_ID);
            DBMS_OUTPUT.PUT_LINE('GENERO DE LA CANCION: ' || FILA_CANCION.TITULO); 
            DBMS_OUTPUT.PUT_LINE('TITULO DE LA CANCION: ' || FILA_CANCION.GENERO);
            DBMS_OUTPUT.PUT_LINE('DURACION DE LA CANCION: ' || FILA_CANCION.DURACION);
            DBMS_OUTPUT.PUT_LINE(CHR(10));
            */
            
        END LOOP;     
        CLOSE DATOS_OBTENIDOS;
        COMMIT;
        MSJ := 'EJECUCIÓN DE ETL CANCIONES COMPLETADO CORRECTAMENTE.';
        
        EXCEPTION
            WHEN OTHERS THEN
                MSJ := 'ERROR EN EL ETL CANCION' || SQLERRM;
                ROLLBACK;
    END;
END;

DECLARE
    MENSAJE VARCHAR2(500);
BEGIN
    PK_ETL_CANCIONES.SP_INSERTAR_CANCIONES(MENSAJE);
    DBMS_OUTPUT.PUT_LINE(MENSAJE);
END;

DELETE FROM DIM_CANCION;
SET SERVEROUTPUT ON;
SELECT * FROM DIM_CANCION;