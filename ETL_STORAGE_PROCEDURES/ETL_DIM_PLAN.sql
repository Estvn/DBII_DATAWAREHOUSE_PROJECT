CREATE OR REPLACE PACKAGE PK_ETL_PLANES IS
    FUNCTION FN_OBTENER_PLANES RETURN SYS_REFCURSOR;
    PROCEDURE SP_INSERTAR_PLANES(MSJ OUT VARCHAR2);
END;

CREATE OR REPLACE PACKAGE BODY PK_ETL_PLANES IS 
    FUNCTION FN_OBTENER_PLANES RETURN SYS_REFCURSOR IS
        DATOS_PLANES SYS_REFCURSOR;
    BEGIN
        OPEN DATOS_PLANES FOR SELECT 
            OTLP_PLANES.ID_PLAN, OTLP_PLANES.NOMBRE, OTLP_PLANES.PRECIO 
            FROM C##_OLTP_ADMIN_DBII_PROJECT.PLANES OTLP_PLANES;
            
            RETURN DATOS_PLANES;
    END;
    
    PROCEDURE SP_INSERTAR_PLANES(MSJ OUT VARCHAR2) IS
        TYPE FILA IS RECORD(
            ID_PLAN DIM_PLAN.ID_PLAN%TYPE,
            NOMBRE DIM_PLAN.NOMBRE%TYPE,
            PRECIO DIM_PLAN.PRECIO%TYPE
        );
        FILA_PLAN FILA;
        
        DATOS_OBTENIDOS SYS_REFCURSOR;
    BEGIN
        DATOS_OBTENIDOS := FN_OBTENER_PLANES;
        
        LOOP
            FETCH DATOS_OBTENIDOS INTO FILA_PLAN;
            EXIT WHEN DATOS_OBTENIDOS%NOTFOUND;
            
            
             INSERT INTO DIM_PLAN (ID_PLAN, NOMBRE, PRECIO)
           SELECT FILA_PLAN.ID_PLAN, NVL(UPPER(TRIM(TRAILING '.' FROM FILA_PLAN.NOMBRE)), 'SIN DEFINIR'), 
           NVL(FILA_PLAN.PRECIO, 0) FROM DUAL 
           WHERE NOT EXISTS (
           SELECT 1 FROM DIM_PLAN D 
           WHERE D.ID_PLAN = FILA_PLAN.ID_PLAN
           );
           
        END LOOP;
        
        CLOSE DATOS_OBTENIDOS;
        COMMIT;
        MSJ := 'EJECUCIÓN DE ETL PLAN COMPLETADO CORRECTAMENTE.';
        
        EXCEPTION
            WHEN OTHERS THEN
                MSJ := 'ERROR EN EL ETL PLAN: ' || SQLERRM;
                ROLLBACK;
        END;
END;
    
DECLARE 
    MENSAJE VARCHAR2(500);
BEGIN
    PK_ETL_PLANES.SP_INSERTAR_PLANES(MENSAJE);
    DBMS_OUTPUT.PUT_LINE(MENSAJE);
END;

DELETE FROM DIM_PLAN;
SELECT * FROM DIM_PLAN;